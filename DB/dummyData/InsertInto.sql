INSERT INTO category (category_id, category_name)
SELECT level, 'CATEGORY_'||level
FROM dual
CONNECT BY level <=1000000;

INSERT INTO NON_MEMBER (NON_MEMBER_ID, TOWN_ID, NON_MEMBER_IP, AUTHORITY_CODE)
SELECT level, t.TOWN_ID, '192.168.0.' || LEVEL, 
       CASE MOD(LEVEL, 2)
            WHEN 0 THEN 'read'
            ELSE 'read+write'
       END
FROM DUAL
JOIN TOWN t ON t.TOWN_ID = level
CONNECT BY LEVEL <= 1000000;

INSERT INTO NON_MEMBER (NON_MEMBER_ID, NON_MEMBER_IP, AUTHORITY_CODE)
SELECT level, '192.168.0.' || LEVEL, 
       CASE MOD(LEVEL, 2)
            WHEN 0 THEN 'read'
            ELSE 'read+write'
       END
FROM DUAL
CONNECT BY LEVEL <= 1000000;

INSERT INTO member_retail_cart (CART_ID)
SELECT c.CART_ID
FROM cart c
WHERE ROWNUM <= 1000000;

CREATE TABLE COMPRI.member
(
member_id NUMBER GENERATED BY DEFAULT AS IDENTITY
CONSTRAINT member_member_id_pk PRIMARY KEY, 

login_id VARCHAR2(20) NOT NULL,

alias VARCHAR2(10) NOT NULL,

money NUMBER NOT NULL,

email VARCHAR2(30) NULL,

mobile_num NUMBER NULL,

sns VARCHAR2(10) NULL,

pwd VARCHAR2(20) NOT NULL,

join_date TIMESTAMP NOT NULL,

point NUMBER NOT NULL,

authority_code VARCHAR2(10) NOT NULL,
CONSTRAINT member_authority_code_ck CHECK(authority_code in ('read', 'read+write')),

admin_account VARCHAR2(10) NOT NULL,
CONSTRAINT member_admin_account_ck CHECK (admin_account in ('user', 'admin'))
);

ALTER TABLE member ADD CONSTRAINT member_member_level_num_fk FOREIGN KEY (member_level_num) REFERENCES member_act_grade(member_level_num) ON DELETE CASCADE;

ALTER TABLE member ADD CONSTRAINT member_town_id_fk FOREIGN KEY (town_id) REFERENCES town(town_id) ON DELETE CASCADE;

INSERT INTO MEMBER (login_id, 
       alias, money, email, mobile_num, sns, pwd,join_date,point, authority_code,admin_account)
SELECT 'loginid'|| LEVEL, 'ali'|| LEVEL, 0+level, 'email_'||level||'@.com',level,'SNS'|| LEVEL, 'PWD'|| LEVEL, TO_DATE('2022-01-01', 'YYYY-MM-DD') + 
       DBMS_RANDOM.VALUE(0, 365), level, 
       CASE MOD(LEVEL, 2)
            WHEN 0 THEN 'read'
            ELSE 'read+write'
       END,
       CASE MOD(LEVEL, 2)
            WHEN 0 THEN 'user'
            ELSE 'admin'
       END
FROM DUAL
CONNECT BY LEVEL <= 1000000;

commit;

select *
from member;

UPDATE MEMBER
SET 
  MEMBER_LEVEL_NUM = (SELECT MEMBER_LEVEL_NUM FROM (SELECT MEMBER_LEVEL_NUM FROM member_act_grade ORDER BY dbms_random.value) WHERE rownum = 1),
  TOWN_ID = (SELECT TOWN_ID FROM (SELECT TOWN_ID FROM town ORDER BY dbms_random.value) WHERE rownum = 1)
; 
INSERT INTO member_retail_cart (member_id, retail_id, cart_id)
SELECT (
    SELECT member_id
    FROM (
            SELECT member_id
            FROM member
            ORDER BY dbms_random.value()
        )
    WHERE ROWNUM = 1
),
(
    SELECT retail_id
    FROM(
        SELECT retail_id
        FROM retail
        ORDER BY dbms_random.value()
    )
    WHERE ROWNUM = 1
), 
(
    SELECT cart_id
    FROM(
        SELECT cart_id
        FROM cart
        ORDER BY dbms_random.value()
    )
    WHERE ROWNUM = 1
)
FROM dual
CONNECT BY level <= 100000;

--안해봄--
INSERT INTO MEMBER (login_id, alias, money, email, mobile_num, sns, pwd, join_date, point, authority_code, admin_account, MEMBER_LEVEL_NUM, TOWN_ID)
SELECT 'loginid'|| LEVEL, 'ali'|| LEVEL, 0+level, 'email_'||level||'@.com', level, 'SNS'|| LEVEL, 'PWD'|| LEVEL, 
       TO_DATE('2022-01-01', 'YYYY-MM-DD') + DBMS_RANDOM.VALUE(0, 365), level, 
       CASE MOD(LEVEL, 2)
            WHEN 0 THEN 'read'
            ELSE 'read+write'
       END,
       CASE MOD(LEVEL, 2)
            WHEN 0 THEN 'user'
            ELSE 'admin'
       END,
       (SELECT MEMBER_LEVEL_NUM FROM MEMBER_ACT_GRADE),
       (SELECT TOWN_ID FROM TOWN)
FROM DUAL
CONNECT BY LEVEL <= 1000000;







